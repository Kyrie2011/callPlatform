<?xml version="1.0" encoding="UTF-8"?>
<!--scan为true时，如果配置文件发生改变将会进行重新加载 -->
<!-- scanPeriod属性设置监测配置文件修改的时间间隔，默认单位为毫秒，在scan为true时才生效 -->
<configuration debug="false" scan="false" scanPeriod="1 seconds">
	
	<!-- 彩色日志依赖的渲染类 -->
	<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	<!-- 彩色日志格式 -->
	<property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
	
	<property name="APP_NAME" value="expert"/>
	
	<springProfile name="dev">
		<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
		<appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
			<destination>10.0.107.123:5044</destination>
			<!-- encoder必须配置,有多种可选 -->
			<encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder" >
				<!-- "appname":"yang_test" 的作用是指定创建索引的名字时用，并且在生成的文档中会多了这个字段	 -->
				<customFields>{"appname":"${APP_NAME}_dev"}</customFields>
			</encoder>
		</appender>

		<!-- Console 输出设置 -->
		<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
			<encoder>
				<pattern>${CONSOLE_LOG_PATTERN}</pattern>
				<charset>utf8</charset>
			</encoder>
		</appender>

		<logger name="com.creditease.bixin.dao" level="debug" additivity="false">
			<appender-ref ref="STDOUT" />
		</logger>


	
	   <appender name="DAYERROR"  class="ch.qos.logback.core.rolling.RollingFileAppender">
	      <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
	         <!--日志文件输出的文件名-->
	         <FileNamePattern>${LOG_HOME}/bailievable_error.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
	         <!--日志文件保留天数-->
	         <MaxHistory>15</MaxHistory>
	         <!-- 日志文件最大尺寸 -->
	         <maxFileSize>200MB</maxFileSize>
	      </rollingPolicy>
	      <filter class="ch.qos.logback.classic.filter.LevelFilter">
	         <level>error</level>
	         <onMatch>ACCEPT</onMatch>
	         <onMismatch>DENY</onMismatch>
	      </filter>
	      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
	         <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
	         <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
	      </encoder>
	   </appender>
	   
	   <logger name="com.creditease.bixin.dao" level="debug" additivity="false">
		   <appender-ref ref="STDOUT" />
		   <appender-ref ref="DAYERROR" />
		   <appender-ref ref="LOGSTASH" />
		</logger>

		<root level="INFO">
			<appender-ref ref="DAYERROR" />
			<appender-ref ref="STDOUT" />
			<appender-ref ref="LOGSTASH" />
		</root>
	</springProfile>

	<springProfile name="test">
		<property name="LOG_HOME" value="../logs"/>

		<!-- Console 输出设置 -->
		<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
			<encoder>
				<pattern>${CONSOLE_LOG_PATTERN}</pattern>
				<charset>utf8</charset>
			</encoder>
		</appender>
		<!-- 按照每天生成日志文件 -->
		<appender name="DAYINFO"  class="ch.qos.logback.core.rolling.RollingFileAppender">
			<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
				<!--日志文件输出的文件名-->
				<FileNamePattern>${LOG_HOME}/bailievable_info.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
				<!--日志文件保留天数-->
				<MaxHistory>15</MaxHistory>
				<!-- 日志文件最大尺寸 -->
				<maxFileSize>200MB</maxFileSize>
			</rollingPolicy>
			<!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
               <level>info</level>
               <onMatch>ACCEPT</onMatch>
               <onMismatch>DENY</onMismatch>
            </filter>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
               <level>debug</level>
               <onMatch>ACCEPT</onMatch>
               <onMismatch>DENY</onMismatch>
            </filter>-->
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
			</encoder>
			<!--日志文件最大的大小-->
			<!-- <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
               <MaxFileSize>10MB</MaxFileSize>
            </triggeringPolicy> -->
		</appender>

		<appender name="DAYERROR"  class="ch.qos.logback.core.rolling.RollingFileAppender">
			<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
				<!--日志文件输出的文件名-->
				<FileNamePattern>${LOG_HOME}/bailievable_error.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
				<!--日志文件保留天数-->
				<MaxHistory>15</MaxHistory>
				<!-- 日志文件最大尺寸 -->
				<maxFileSize>200MB</maxFileSize>
			</rollingPolicy>
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>error</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
			</encoder>
		</appender>

		<logger name="com.creditease.bixin.dao" level="debug" additivity="false">
			<appender-ref ref="STDOUT" />
			<appender-ref ref="DAYINFO" />
		</logger>

		<root level="INFO">
			<appender-ref ref="STDOUT" />
			<appender-ref ref="DAYERROR" />
			<appender-ref ref="DAYINFO" />
		</root>
	</springProfile>
   
   <springProfile name="demo">
   		<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
		<appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
			<destination>10.0.107.123:5044</destination>
			<!-- encoder必须配置,有多种可选 -->
			<encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder" >
				 <!-- "appname":"yang_test" 的作用是指定创建索引的名字时用，并且在生成的文档中会多了这个字段	 -->
				 <customFields>{"appname":"${APP_NAME}_dev"}</customFields>
			</encoder>
	   </appender>
	   
	   <!-- Console 输出设置 -->
	   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
	      <encoder>
	         <pattern>${CONSOLE_LOG_PATTERN}</pattern>
	         <charset>utf8</charset>
	      </encoder>
	   </appender>
	   
	   <logger name="com.creditease.bixin.dao" level="debug" additivity="false">
		   <appender-ref ref="STDOUT" />
		</logger>
		
	   <root level="INFO">
	        <appender-ref ref="STDOUT" />
			<appender-ref ref="LOGSTASH" />
	   </root>
    </springProfile>
   
	<springProfile name="pro">
		<property name="LOG_HOME" value="../logs"/>

		<!-- Console 输出设置 -->
		<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
			<encoder>
				<pattern>${CONSOLE_LOG_PATTERN}</pattern>
				<charset>utf8</charset>
			</encoder>
		</appender>
		<!-- 按照每天生成日志文件 -->
		<appender name="DAYINFO"  class="ch.qos.logback.core.rolling.RollingFileAppender">
			<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
				<!--日志文件输出的文件名-->
				<FileNamePattern>${LOG_HOME}/bailievable_info.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
				<!--日志文件保留天数-->
				<MaxHistory>15</MaxHistory>
				<!-- 日志文件最大尺寸 -->
				<maxFileSize>200MB</maxFileSize>
			</rollingPolicy>
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
			</encoder>
		</appender>

		<appender name="DAYERROR"  class="ch.qos.logback.core.rolling.RollingFileAppender">
			<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
				<!--日志文件输出的文件名-->
				<FileNamePattern>${LOG_HOME}/bailievable_error.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
				<!--日志文件保留天数-->
				<MaxHistory>15</MaxHistory>
				<!-- 日志文件最大尺寸 -->
				<maxFileSize>200MB</maxFileSize>
			</rollingPolicy>
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>error</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
			</encoder>
		</appender>

		<logger name="com.creditease.bixin.dao" level="debug" additivity="false">
			<appender-ref ref="STDOUT" />
			<appender-ref ref="DAYINFO" />
		</logger>

		<root level="INFO">
			<appender-ref ref="STDOUT" />
			<appender-ref ref="DAYERROR" />
			<appender-ref ref="DAYINFO" />
		</root>
	</springProfile>
	
	<!-- 将控制指定name包下的所有类的日志的打印，通过level设置打印级别 -->
	<logger name="org.springframework" level="ERROR"/>
	<logger name="org.apache.commons" level="ERROR"/>
	<logger name="org.mybatis" level="ERROR"/>
	<logger name="microsoft.exchange.webservices.data" level="ERROR"/>
	<logger name="org.apache.ibatis.io.ResolverUtil" level="ERROR"/>
	<logger name="org.apache.ibatis.logging" level="ERROR"/>
	<logger name="com.alibaba.druid" level="ERROR"/>
	<logger name="org.apache.http" level="ERROR" />
	
</configuration>